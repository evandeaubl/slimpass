#!/bin/sh

# From http://stackoverflow.com/questions/1055671/how-can-i-get-the-behavior-of-gnus-readlink-f-on-a-mac
canonicalize() {
  TARGET_FILE=$1

  cd `dirname $TARGET_FILE`
  TARGET_FILE=`basename $TARGET_FILE`

  # Iterate down a (possible) chain of symlinks
  while [ -L "$TARGET_FILE" ]
  do
    TARGET_FILE=`readlink $TARGET_FILE`
    cd `dirname $TARGET_FILE`
    TARGET_FILE=`basename $TARGET_FILE`
  done

  # Compute the canonicalized name by finding the physical path 
  # for the directory we're in and appending the target file.
  PHYS_DIR=`pwd -P`
  RESULT=$PHYS_DIR/$TARGET_FILE
  echo $RESULT
}

# Password query functions
sp_osxkeychain() {
  SECURITY_RESULT=$(security 2>&1 >/dev/null find-generic-password -ga slimpass)
  echo $SECURITY_RESULT | sed "s/^password: \"\([^\"]*\)\"$/\\1/g"
}

sp_pinentry() {
  PINENTRY_RESULT=$((echo SETPROMPT $1 ; echo GETPIN) | pinentry 2>/dev/null)
  echo -n "$PINENTRY_RESULT" | grep '^ERR ' >/dev/null 2>&1 && return 1
  echo -n "$PINENTRY_RESULT" | grep '^D ' |cut -d" " -f2
}

sp_read() {
  read -s -p "$1 " PASSWORD_TMP
  echo >&2
  echo $PASSWORD_TMP
}

PASSWORD_FILE="$HOME/.passwords"
NAME=
OPERATION=query
ARGS_PROCESSED=0
PASSWORD_METHOD=read

while getopts "adcln:r:K:" OPTION
do
  case $OPTION in
  a)
    OPERATION=add
    ;;
  d)
    OPERATION=delete
    ;;
  c)
    OPERATION=create
    ;;
  l)
    OPERATION=list
    ;;
  n)
    NAME="$OPTARG"
    ARGS_PROCESSED=$(($ARGS_PROCESSED + 1))
    ;;
  r)
    OPERATION=rename
    NEWNAME="$OPTARG"
    ARGS_PROCESSED=$(($ARGS_PROCESSED + 1))
    ;;
  K)
    PASSWORD_METHOD="$OPTARG"
    ARGS_PROCESSED=$(($ARGS_PROCESSED + 1))
    ;;
  *)
    ARGS_PROCESSED=$(($ARGS_PROCESSED - 1))
    ;;
  esac
  ARGS_PROCESSED=$(($ARGS_PROCESSED + 1))
done

if [ $ARGS_PROCESSED -lt $# ]
then
  exit 1
fi

if [ -z "$NAME" ] && [ $OPERATION != "create" -a $OPERATION != "list" ]
then
  echo "Entry name is required for non-create operations" >&2
  exit 1
fi

PASSWORD_FILE=$(canonicalize $PASSWORD_FILE)

PASSWORD_FILE_PASSWORD=$(sp_$PASSWORD_METHOD "Enter password file password:")
if [ $? -ne 0 ]
then
  echo "Password could not be retrieved" >&2
  exit 4
fi
export PASSWORD_FILE_PASSWORD

if [ $OPERATION != "create" ]
then
  if ! openssl enc -aes-256-cbc -pass env:PASSWORD_FILE_PASSWORD -d -in "$PASSWORD_FILE" >/dev/null 2>&1
  then
    echo "Decryption failed - password was likely incorrect" >&2
    exit 5
  fi
fi

case $OPERATION in
create)
  if [ -a $PASSWORD_FILE ]
  then
    echo "Password file $PASSWORD_FILE already exists - remove first to create" >&2
    exit 2
  fi
  PASSWORD_FILE_PASSWORD2=$(sp_$PASSWORD_METHOD "Verify password file password:")
  if [ $? -ne 0 ]
  then
    echo "Password could not be retrieved" >&2
    exit 4
  fi
  echo >&2
  if [ $PASSWORD_FILE_PASSWORD != $PASSWORD_FILE_PASSWORD2 ]
  then
    echo "Passwords do not match - please retry" >&2
    exit 3
  fi
  printf "\c" | openssl enc -aes-256-cbc -pass env:PASSWORD_FILE_PASSWORD -e -out "$PASSWORD_FILE"
  ;;
query)
  openssl enc -aes-256-cbc -pass env:PASSWORD_FILE_PASSWORD -d -in "$PASSWORD_FILE" | grep "$NAME" | cut -f 1 | tr -d '\n'
  ;;
add)
  read -s -p "Enter password for new entry: " NEW_PASSWORD
  echo
  (openssl enc -aes-256-cbc -pass env:PASSWORD_FILE_PASSWORD -d -in "$PASSWORD_FILE" ; printf $NEW_PASSWORD"\t""$NAME""\n") | openssl enc -aes-256-cbc -pass env:PASSWORD_FILE_PASSWORD -e -out "$PASSWORD_FILE.tmp" && mv "$PASSWORD_FILE.tmp" "$PASSWORD_FILE"
  ;;
delete)
  openssl enc -aes-256-cbc -pass env:PASSWORD_FILE_PASSWORD -d -in "$PASSWORD_FILE" | grep -v "$NAME" | \
    openssl enc -aes-256-cbc -pass env:PASSWORD_FILE_PASSWORD -e -out "$PASSWORD_FILE.tmp" && mv "$PASSWORD_FILE.tmp" "$PASSWORD_FILE"
  ;;
list)
  openssl enc -aes-256-cbc -pass env:PASSWORD_FILE_PASSWORD -d -in "$PASSWORD_FILE" | cut -f 2-
  ;;
rename)
  openssl enc -aes-256-cbc -pass env:PASSWORD_FILE_PASSWORD -d -in "$PASSWORD_FILE" | sed "s!$NAME!$NEWNAME!g" | \
    openssl enc -aes-256-cbc -pass env:PASSWORD_FILE_PASSWORD -e -out "$PASSWORD_FILE.tmp" && mv "$PASSWORD_FILE.tmp" "$PASSWORD_FILE"
esac

